/* eslint-disable @typescript-eslint/no-explicit-any */
import { isAxiosError } from 'axios';

export enum API_ERROR_CODE {
  METHOD_IS_NOT_FOUND = 1000,
  ARGUMENT_COUNT_ERROR = 1001,
  INTERNAL_ERROR = 1002,
  SQL_ERROR = 1003,
  ROWS_NOT_FOUND = 1004,
  VALIDATION_ERROR = 1005,
  USER_NOT_AUTHORIZED = 1006,
  DATABASE_UNIQUE_ERROR = 1007,
  LOGOUT_AUTH_ERROR = 1008,
  REDIS_CONNECTION_ERROR = 1009,
  MODEL_IS_EMPTY = 1010,
  ACCESS_FORBIDDEN = 1011,
  CONFLICT_ERROR = 1012,
  DATABASE_CONNECTION_ERROR = 1017,
  CREDENTIALS_INCORRECT = 1013,
  AUTHORIZATION_TIMEOUT_ERROR = 1014,
  GUZZLE_CONNECTION_ERROR = 1015,
  UNEXPECTED_VALUE_EXCEPTION = 1016,
  INVALID_MATCH_EXCEPTION = 1018,
  FILE_ALREADY_UPLOADED = 1019,
  CREATE_FOLDER_ERROR = 1020,
  REPORT_GENERATION_ERROR = 1021,
  AC_FACT_VALUE_ERROR = 1022,
  QUEUE_ERROR = 1023,
  HTTP_CONNECTION_ERROR = 1024,
  RATE_LIMITER_ERROR = 1025,
  SQL_UNIQUE_KEY_ERROR = 1026,
  ACTION_UNAUTHORIZED = 1027,
  MAIL_SENDING_ERROR = 1028,
  MINIO_STORE_ERROR = 2001,
  BITRIX_RESULT_ERROR = 3001
}

const DEFAULT_ERROR_CODE = -1;
const DEFAULT_ERROR_MESSAGE = '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞';

export const errorApiMapRu: Record<API_ERROR_CODE, { message: string; userFriendly: boolean }> = {
  [API_ERROR_CODE.METHOD_IS_NOT_FOUND]: { message: '–ú–µ—Ç–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω', userFriendly: false },
  [API_ERROR_CODE.ARGUMENT_COUNT_ERROR]: { message: '–û—à–∏–±–∫–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤', userFriendly: false },
  [API_ERROR_CODE.INTERNAL_ERROR]: { message: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞', userFriendly: false },
  [API_ERROR_CODE.SQL_ERROR]: { message: '–û—à–∏–±–∫–∞ SQL', userFriendly: false },
  [API_ERROR_CODE.ROWS_NOT_FOUND]: { message: '–°—Ç—Ä–æ–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã', userFriendly: true },
  [API_ERROR_CODE.VALIDATION_ERROR]: { message: '–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏', userFriendly: true },
  [API_ERROR_CODE.USER_NOT_AUTHORIZED]: { message: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω', userFriendly: true },
  [API_ERROR_CODE.DATABASE_UNIQUE_ERROR]: { message: '–û—à–∏–±–∫–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö', userFriendly: true },
  [API_ERROR_CODE.LOGOUT_AUTH_ERROR]: { message: '–û—à–∏–±–∫–∞ –≤—ã—Ö–æ–¥–∞ –∏–∑ —Å–∏—Å—Ç–µ–º—ã', userFriendly: false },
  [API_ERROR_CODE.REDIS_CONNECTION_ERROR]: { message: '–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Redis', userFriendly: false },
  [API_ERROR_CODE.MODEL_IS_EMPTY]: { message: '–ú–æ–¥–µ–ª—å –ø—É—Å—Ç–∞', userFriendly: true },
  [API_ERROR_CODE.ACCESS_FORBIDDEN]: { message: '–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω', userFriendly: false },
  [API_ERROR_CODE.CONFLICT_ERROR]: { message: '–ö–æ–Ω—Ñ–ª–∏–∫—Ç –æ—à–∏–±–∫–∏', userFriendly: true },
  [API_ERROR_CODE.DATABASE_CONNECTION_ERROR]: { message: '–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö', userFriendly: false },
  [API_ERROR_CODE.CREDENTIALS_INCORRECT]: { message: '–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ–≤–µ—Ä–Ω—ã', userFriendly: true },
  [API_ERROR_CODE.AUTHORIZATION_TIMEOUT_ERROR]: { message: '–¢–∞–π–º-–∞—É—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏', userFriendly: false },
  [API_ERROR_CODE.GUZZLE_CONNECTION_ERROR]: { message: '–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è Guzzle', userFriendly: false },
  [API_ERROR_CODE.UNEXPECTED_VALUE_EXCEPTION]: { message: '–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ', userFriendly: false },
  [API_ERROR_CODE.INVALID_MATCH_EXCEPTION]: { message: '–û—à–∏–±–∫–∞ –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è', userFriendly: true },
  [API_ERROR_CODE.FILE_ALREADY_UPLOADED]: { message: '–§–∞–π–ª —É–∂–µ –±—ã–ª –∑–∞–≥—Ä—É–∂–µ–Ω', userFriendly: true },
  [API_ERROR_CODE.CREATE_FOLDER_ERROR]: { message: '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞–ø–∫–∏', userFriendly: false },
  [API_ERROR_CODE.REPORT_GENERATION_ERROR]: { message: '–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞', userFriendly: false },
  [API_ERROR_CODE.AC_FACT_VALUE_ERROR]: { message: '–û—à–∏–±–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è AC_FACT', userFriendly: false },
  [API_ERROR_CODE.QUEUE_ERROR]: { message: '–û—à–∏–±–∫–∞ –æ—á–µ—Ä–µ–¥–∏', userFriendly: false },
  [API_ERROR_CODE.HTTP_CONNECTION_ERROR]: { message: '–û—à–∏–±–∫–∞ HTTP –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è', userFriendly: false },
  [API_ERROR_CODE.RATE_LIMITER_ERROR]: { message: '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ', userFriendly: true },
  [API_ERROR_CODE.SQL_UNIQUE_KEY_ERROR]: { message: '–û—à–∏–±–∫–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –∫–ª—é—á–∞ SQL', userFriendly: true },
  [API_ERROR_CODE.ACTION_UNAUTHORIZED]: { message: '–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ', userFriendly: true },
  [API_ERROR_CODE.MAIL_SENDING_ERROR]: { message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–æ—á—Ç—ã', userFriendly: false },
  [API_ERROR_CODE.MINIO_STORE_ERROR]: { message: '–û—à–∏–±–∫–∞ —Ö—Ä–∞–Ω–µ–Ω–∏—è Minio', userFriendly: false },
  [API_ERROR_CODE.BITRIX_RESULT_ERROR]: { message: '–û—à–∏–±–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ Bitrix', userFriendly: false }
};
export interface IApiError {
  code: number;
  message: string;
  userFriendly: boolean;
  customMessage?: string;
  url?: string;
  method?: string;
  status?: number;
  requestData?: any;
}

class ApiError extends Error {
  constructor(
    public code: number,
    public message: string,
    public userFriendly: boolean,
    public customMessage?: string,
    public url?: string,
    public method?: string,
    public status?: number,
    public requestData?: any
  ) {
    super(message);
    this.name = 'ApiError';
  }

  toObject(): IApiError {
    return {
      code: this.code,
      message: this.message,
      userFriendly: this.userFriendly,
      customMessage: this.customMessage,
      url: this.url,
      method: this.method,
      status: this.status,
      requestData: this.requestData
    };
  }

  toJSON(): IApiError {
    return this.toObject();
  }
}

export class ApiErrorFactory {
  static create(error: unknown, requestData?: any, customMessage?: string): IApiError {
    if (isAxiosError(error)) {
      const { response, config } = error;
      const responseData = response?.data;
      const url = config?.url;
      const method = config?.method;
      const status = response?.status;

      if (responseData) {
        const code: number = responseData.code ?? DEFAULT_ERROR_CODE;

        const apiErrorCode = code as API_ERROR_CODE;

        const { message = DEFAULT_ERROR_MESSAGE, userFriendly = false } = errorApiMapRu[apiErrorCode] || {};

        const apiError = new ApiError(
          apiErrorCode,
          message,
          userFriendly,
          customMessage,
          url,
          method,
          status,
          requestData
        );

        console.error('üëæüëæüëæ API_ERROR:', apiError.toJSON());
        return apiError.toJSON();
      }
    }

    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
    return {
      code: DEFAULT_ERROR_CODE,
      message: DEFAULT_ERROR_MESSAGE,
      userFriendly: false,
      customMessage,
      requestData
    };
  }
}
